# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Bump build number"
  lane :bump_build_number do
    increment_version_code(gradle_file_path: "app/build.gradle")
  end

  desc "Bump version name"
  lane :bump_version_name do
    increment_version_name(gradle_file_path: "app/build.gradle")
  end

  desc "Release a new tag based on your current config"
  lane :release do
    ensure_git_status_clean
    parner_id = UI.input("Which partner is this apk linked to: ")
    environment = UI.select("Which environment is this apk pointing to: ",
    ["dev01", "dev02","test","prod"])

    customSlug = prompt(
      text: "Do you want to set a custom URL slug?",
      boolean: true
    )

    slug = if customSlug then prompt(text: "What is the URL slug?") else git_branch().downcase.split("/")[1] end

    commit = last_git_commit
    tag = "beta-#{commit[:abbreviated_commit_hash]}-#{parner_id}-#{environment}/#{slug}"

      # Confirm with the user
    confirm = prompt(
      text: "The following tag is about to be created: #{tag}. Continue?",
      boolean: true
    )

    if !confirm then
      UI.user_error!("User cancelled the tag creation")
    end

      # Create the tag and push to remote
    add_git_tag(tag: tag)
    push_to_git_remote(tags: true)
  end

  lane :deploy_beta do |options|
    slug = git_branch().downcase.split("/")[1]
    if slug.nil? || slug.empty? then
       slug = ENV["BRANCH_NAME"]
    end
    deploy_env(env: "beta", slug: slug)
  end

  desc "Deploy environment"
  private_lane :deploy_env do |options|
    # Clean
    gradle(task: "clean")

     # Build
    gradle(
      task: "assemble",
      build_type: "release",
    )

    # Deploy to S3
    aws_s3(
      access_key: ENV["SID_AWS_ACCESS_KEY_ID"],
      secret_access_key: ENV["SID_AWS_SECRET_ACCESS_KEY"],
      bucket: ENV["SID_AWS_BUCKET"],
      region: ENV["SID_AWS_REGION"],
      apk: "#{lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]}",
      upload_metadata: true,
      app_directory: "Beta/#{options[:slug]}",
      html_template_path: "fastlane/template/smile_android.erb",
      html_template_params: {
        build_version: ENV["BUILD_VERSION"]
      }
      )

    slack(
      message: "New android demo available for testing",
      channel: "#mobile",  # Optional, by default will post to the default channel configurd for the POST URL.
      success: true,        # Optional, defaults to true.
      payload: {  # Optional, lets you specify any number of your own Slack attachments.
        "Build Date" => Time.new.to_s,
        "Built by" => "FastLane",
      },
      default_payloads: [:git_branch], # Optional, lets you specify default payloads to include. Pass an empty array to suppress all the default payloads.
      attachment_properties: { # Optional, lets you specify any other properties available for attachments in the slack API (see https://api.slack.com/docs/attachments).
        fields: [{
          title: "Available here",
          value: "https://#{ENV["SID_AWS_BUCKET"]}.s3.#{ENV["SID_AWS_REGION"]}.amazonaws
          .com/Beta/#{options[:slug]}/index.html",
          short: false
        },{
        title: "Version",
        value: ENV["BUILD_VERSION"],
        short: false
      }]
      }
    )
  end
end
